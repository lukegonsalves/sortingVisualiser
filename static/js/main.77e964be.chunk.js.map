{"version":3,"sources":["SortingVisualiser.js","sortingAlgorithms/sortingAlgorithms.js","App.js","index.js"],"names":["SortingVisualiser","props","state","array","this","resetArray","min","max","i","push","Math","floor","random","setState","steps","console","log","length","j","tmp","sortingAlgorithms","arrayBars","document","getElementsByClassName","setTimeout","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","height","className","map","value","idx","key","onClick","componentDidMount","mergeSort","quickSort","heapSort","bubbleSort","Component","App","ReactDOM","render","getElementById"],"mappings":"+TAMqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTC,MAAO,IAJG,E,gEASdC,KAAKC,e,mCAKL,IADA,IA0DuBC,EAAKC,EA1DtBJ,EAAQ,GACLK,EAAI,EAAGA,EAAE,IAAKA,IACnBL,EAAMM,MAwDaH,EAxDc,EAwDTC,EAxDW,IAyDpCG,KAAKC,MAAMD,KAAKE,UAAYL,EAAMD,EAAM,GAAKA,KAvDhDF,KAAKS,SAAS,CAACV,Y,iJAgBf,IAAIW,ECxCL,SAAoBX,GACvBY,QAAQC,IAAIb,GAER,IADJ,IAAMW,EAAQ,GACFN,EAAI,EAAGA,EAAIL,EAAMc,OAAQT,IAC7B,IAAI,IAAIU,EAAI,EAAGA,EAAIf,EAAMc,OAAQC,IAC7B,GAAGf,EAAMe,GAAKf,EAAMe,EAAI,GAAG,CACvBJ,EAAML,KAAK,CAACS,EAAGA,EAAE,IACjB,IAAIC,EAAMhB,EAAMe,GAChBf,EAAMe,GAAKf,EAAMe,EAAE,GACnBf,EAAMe,EAAE,GAAKC,EAKzB,OADAJ,QAAQC,IAAIb,GACLW,ED0BKM,CAA6BhB,KAAKF,MAAMC,OACpDY,QAAQC,IAAIF,GACZ,IAHQ,eAGAN,GACJ,IAAMa,EAAYC,SAASC,uBAAuB,aAClDC,YAAW,WAAM,IAAD,cACuBV,EAAMN,GAD7B,GACLiB,EADK,KACQC,EADR,KAGNC,EAAcN,EAAUI,GAAaG,MACrCC,EAAcR,EAAUK,GAAaE,MACvCT,EAAMQ,EAAYG,OACtBH,EAAYG,OAASD,EAAYC,OACjCD,EAAYC,OAASX,IAClB,GAAJX,IAVCA,EAAI,EAAGA,EAAIM,EAAMG,OAAQT,IAAK,EAA9BA,K,+BAcF,IAAD,OACEL,EAASC,KAAKF,MAAdC,MACP,OACI,yBAAK4B,UAAW,mBACX5B,EAAM6B,KAAI,SAACC,EAAOC,GAAR,OACP,yBACIH,UAAU,YACVI,IAAKD,EACLN,MAAS,CAACE,OAAO,GAAD,OAAKG,EAAL,YAGxB,6BACA,4BAAQG,QAAS,kBAAM,EAAKC,sBAA5B,sBACA,4BAAQD,QAAS,kBAAM,EAAKE,cAA5B,cACA,4BAAQF,QAAS,kBAAM,EAAKG,cAA5B,cACA,4BAAQH,QAAS,kBAAM,EAAKI,aAA5B,aACA,4BAAQJ,QAAS,kBAAM,EAAKK,eAA5B,oB,GAlE+BC,a,UEShCC,E,uKATX,OACE,yBAAKZ,UAAY,OACf,6DACA,kBAAC,EAAD,W,GALUW,aCClBE,IAASC,OAAO,kBAAC,EAAD,MAASvB,SAASwB,eAAe,W","file":"static/js/main.77e964be.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './SortingVisualiser.css'\nimport * as sortingAlgorithms from './sortingAlgorithms/sortingAlgorithms.js'\n\n\n\nexport default class SortingVisualiser extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n    \n    resetArray(){\n        const array = [];\n        for (let i = 0; i<100; i++){ //210 or 310\n            array.push(randomIntFromInterval(5,500));\n        }\n        this.setState({array});\n    }\n\n    mergeSort(){\n\n    }\n\n    quickSort(){\n\n    }\n\n    heapSort(){\n\n    }\n\n    bubbleSort(){\n        var steps = sortingAlgorithms.bubbleSort(this.state.array);\n        console.log(steps);\n        for(let i = 0; i < steps.length; i++){\n            const arrayBars = document.getElementsByClassName('array-bar');\n            setTimeout(() =>{\n                const [barOneIndex, barTwoIndex] = steps[i];\n                //console.log(barOneIndex, barTwoIndex);\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                var tmp = barOneStyle.height;\n                barOneStyle.height = barTwoStyle.height;\n                barTwoStyle.height = tmp;\n            }, i * 10);\n        }\n    }\n\n    render() {\n        const {array} = this.state;\n        return (\n            <div className =\"array-container\">\n                {array.map((value, idx) => (\n                    <div \n                        className=\"array-bar\"\n                        key={idx} \n                        style = {{height: `${value}px`}}>\n                    </div>\n                ))}\n                <br></br>\n                <button onClick={() => this.componentDidMount()}>Generate New Array</button>\n                <button onClick={() => this.mergeSort()}>Merge Sort</button>\n                <button onClick={() => this.quickSort()}>Quick Sort</button>\n                <button onClick={() => this.heapSort()}>Heap Sort</button>\n                <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n            </div>\n        );\n    }\n}\n\nfunction randomIntFromInterval(min, max){\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function bubbleSort(array) {\n    console.log(array);\n    const steps = [];\n        for(let i = 0; i < array.length; i++){ \n            for(let j = 0; j < array.length; j++){\n                if(array[j] > array[j + 1]){\n                    steps.push([j, j+1]);\n                    let tmp = array[j];\n                    array[j] = array[j+1];\n                    array[j+1] = tmp;\n                }\n            }\n        }\n        console.log(array);\n        return steps;\n};","import React, { Component } from 'react'\nimport SortingVisualiser from './SortingVisualiser'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return(\n      <div className = \"App\">\n        <h1>Sorting Algorithms Visualiser</h1>\n        <SortingVisualiser />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}